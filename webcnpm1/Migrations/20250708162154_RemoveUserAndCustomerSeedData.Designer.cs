// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webcnpm1.Models;

#nullable disable

namespace webcnpm1.Migrations
{
    [DbContext(typeof(WebcnpmDbContext))]
    [Migration("20250708162154_RemoveUserAndCustomerSeedData")]
    partial class RemoveUserAndCustomerSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webcnpm1.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("QuantityInStock")
                        .HasColumnType("int")
                        .HasColumnName("quantity_in_stock");

                    b.HasKey("Id")
                        .HasName("PK__componen__3213E83F7A54634A");

                    b.ToTable("components", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__customer__3213E83FC38DBEEE");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("model");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__devices__3213E83F5FC7C298");

                    b.HasIndex("CustomerId");

                    b.ToTable("devices", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_status");

                    b.Property<int?>("RepairOrderId")
                        .HasColumnType("int")
                        .HasColumnName("repair_order_id");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_amount");

                    b.HasKey("Id")
                        .HasName("PK__invoices__3213E83F3A491333");

                    b.HasIndex("RepairOrderId");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.RepairComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int")
                        .HasColumnName("component_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("RepairOrderId")
                        .HasColumnType("int")
                        .HasColumnName("repair_order_id");

                    b.HasKey("Id")
                        .HasName("PK__repair_c__3213E83FE32AA1F7");

                    b.HasIndex("ComponentId");

                    b.HasIndex("RepairOrderId");

                    b.ToTable("repair_components", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.RepairOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int")
                        .HasColumnName("assigned_to");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("device_id");

                    b.Property<string>("ProblemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_description");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("received")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__repair_o__3213E83F4F35BD6F");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeviceId");

                    b.ToTable("repair_orders", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.RepairService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("quantity");

                    b.Property<int?>("RepairOrderId")
                        .HasColumnType("int")
                        .HasColumnName("repair_order_id");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    b.HasKey("Id")
                        .HasName("PK__repair_s__3213E83FEDC687D6");

                    b.HasIndex("RepairOrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("repair_services", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__services__3213E83FD51A5637");

                    b.ToTable("services", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F98FDBE32");

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC5725BD89AC0")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("webcnpm1.Models.Device", b =>
                {
                    b.HasOne("webcnpm1.Models.Customer", "Customer")
                        .WithMany("Devices")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__devices__custome__5070F446");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("webcnpm1.Models.Invoice", b =>
                {
                    b.HasOne("webcnpm1.Models.RepairOrder", "RepairOrder")
                        .WithMany("Invoices")
                        .HasForeignKey("RepairOrderId")
                        .HasConstraintName("FK__invoices__repair__6754599E");

                    b.Navigation("RepairOrder");
                });

            modelBuilder.Entity("webcnpm1.Models.RepairComponent", b =>
                {
                    b.HasOne("webcnpm1.Models.Component", "Component")
                        .WithMany("RepairComponents")
                        .HasForeignKey("ComponentId")
                        .HasConstraintName("FK__repair_co__compo__6383C8BA");

                    b.HasOne("webcnpm1.Models.RepairOrder", "RepairOrder")
                        .WithMany("RepairComponents")
                        .HasForeignKey("RepairOrderId")
                        .HasConstraintName("FK__repair_co__repai__628FA481");

                    b.Navigation("Component");

                    b.Navigation("RepairOrder");
                });

            modelBuilder.Entity("webcnpm1.Models.RepairOrder", b =>
                {
                    b.HasOne("webcnpm1.Models.User", "AssignedToNavigation")
                        .WithMany("RepairOrders")
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__repair_or__assig__571DF1D5");

                    b.HasOne("webcnpm1.Models.Customer", "Customer")
                        .WithMany("RepairOrders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__repair_or__custo__5535A963");

                    b.HasOne("webcnpm1.Models.Device", "Device")
                        .WithMany("RepairOrders")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("FK__repair_or__devic__5629CD9C");

                    b.Navigation("AssignedToNavigation");

                    b.Navigation("Customer");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("webcnpm1.Models.RepairService", b =>
                {
                    b.HasOne("webcnpm1.Models.RepairOrder", "RepairOrder")
                        .WithMany("RepairServices")
                        .HasForeignKey("RepairOrderId")
                        .HasConstraintName("FK__repair_se__repai__5CD6CB2B");

                    b.HasOne("webcnpm1.Models.Service", "Service")
                        .WithMany("RepairServices")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__repair_se__servi__5DCAEF64");

                    b.Navigation("RepairOrder");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("webcnpm1.Models.Component", b =>
                {
                    b.Navigation("RepairComponents");
                });

            modelBuilder.Entity("webcnpm1.Models.Customer", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("RepairOrders");
                });

            modelBuilder.Entity("webcnpm1.Models.Device", b =>
                {
                    b.Navigation("RepairOrders");
                });

            modelBuilder.Entity("webcnpm1.Models.RepairOrder", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("RepairComponents");

                    b.Navigation("RepairServices");
                });

            modelBuilder.Entity("webcnpm1.Models.Service", b =>
                {
                    b.Navigation("RepairServices");
                });

            modelBuilder.Entity("webcnpm1.Models.User", b =>
                {
                    b.Navigation("RepairOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
