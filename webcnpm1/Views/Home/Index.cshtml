@using webcnpm1.ViewModels
@model DashboardViewModel

@{
    ViewData["Title"] = "Tổng quan";
}

<div class="dashboard-container">
    <h1 class="page-title">@ViewData["Title"]</h1>

    <!-- Stat Cards -->
    <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card h-100">
                <div class="stat-card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Đơn đang chờ</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.PendingOrders</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tasks fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card h-100">
                <div class="stat-card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Đơn hoàn thành</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.CompletedOrders</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card h-100">
                <div class="stat-card-body">
                     <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Tổng doanh thu</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@String.Format("{0:C0}", Model.TotalRevenue)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card h-100">
                <div class="stat-card-body">
                     <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Tổng khách hàng</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalCustomers</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts -->
    <div class="row">
        <div class="col-lg-7 mb-4">
            <div class="dashboard-card">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">Doanh thu theo tháng (Năm nay)</h6>
                </div>
                <div class="card-body">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-5 mb-4">
            <div class="dashboard-card">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">Tỉ lệ trạng thái đơn hàng</h6>
                </div>
                <div class="card-body">
                    <canvas id="statusPieChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities -->
    <div class="dashboard-card">
        <div class="card-header">
            <h6 class="m-0 font-weight-bold text-primary">Hoạt động gần đây</h6>
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Khách hàng</th>
                        <th>Mô tả</th>
                        <th>Trạng thái</th>
                        <th>Ngày tạo</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var activity in Model.RecentActivities)
                    {
                        <tr>
                            <td>@activity.Id</td>
                            <td>@(activity.Customer?.FullName ?? "N/A")</td>
                            <td>@activity.ProblemDescription</td>
                            <td><span class="badge badge-status-@activity.Status">@activity.Status</span></td>
                            <td>@(activity.CreatedAt.HasValue ? activity.CreatedAt.Value.ToString("g") : "N/A")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Data from Model
            const revenueData = @Html.Raw(Json.Serialize(Model.RevenueByMonth));
            const statusData = @Html.Raw(Json.Serialize(Model.OrdersByStatus));

            // Revenue Chart (Bar)
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            const revenueMonths = ['Thg 1', 'Thg 2', 'Thg 3', 'Thg 4', 'Thg 5', 'Thg 6', 'Thg 7', 'Thg 8', 'Thg 9', 'Thg 10', 'Thg 11', 'Thg 12'];
            const monthlyRevenues = Array(12).fill(0);
            for (const [month, total] of Object.entries(revenueData)) {
                monthlyRevenues[parseInt(month) - 1] = total;
            }

            new Chart(revenueCtx, {
                type: 'bar',
                data: {
                    labels: revenueMonths,
                    datasets: [{
                        label: 'Doanh thu',
                        data: monthlyRevenues,
                        backgroundColor: 'rgba(233, 69, 96, 0.2)',
                        borderColor: 'rgba(233, 69, 96, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value, index, values) {
                                    return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                                }
                            }
                        }
                    }
                }
            });

            // Status Pie Chart
            const statusCtx = document.getElementById('statusPieChart').getContext('2d');
            new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: Object.keys(statusData),
                    datasets: [{
                        data: Object.values(statusData),
                        backgroundColor: [
                            '#f6c23e', // warning
                            '#4e73df', // primary
                            '#1cc88a', // success
                            '#e74a3b', // danger
                            '#36b9cc', // info
                            '#858796'  // secondary
                        ],
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });
        });
    </script>
}

